{"version":3,"file":"api-user-1de515ff.js","sources":["../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isNil.js","../../../node_modules/.pnpm/element-plus@2.3.14_vue@3.3.4/node_modules/element-plus/es/utils/error.mjs","../../../node_modules/.pnpm/element-plus@2.3.14_vue@3.3.4/node_modules/element-plus/es/constants/event.mjs","../../../apps/mainapp/apis/api-user.ts"],"sourcesContent":["/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n","import './types.mjs';\nimport { isString } from '@vue/shared';\n\nclass ElementPlusError extends Error {\n  constructor(m) {\n    super(m);\n    this.name = \"ElementPlusError\";\n  }\n}\nfunction throwError(scope, m) {\n  throw new ElementPlusError(`[${scope}] ${m}`);\n}\nfunction debugWarn(scope, message) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const error = isString(scope) ? new ElementPlusError(`[${scope}] ${message}`) : scope;\n    console.warn(error);\n  }\n}\n\nexport { debugWarn, throwError };\n//# sourceMappingURL=error.mjs.map\n","const UPDATE_MODEL_EVENT = \"update:modelValue\";\nconst CHANGE_EVENT = \"change\";\nconst INPUT_EVENT = \"input\";\n\nexport { CHANGE_EVENT, INPUT_EVENT, UPDATE_MODEL_EVENT };\n//# sourceMappingURL=event.mjs.map\n","/**\r\n * @description 用户 API\r\n * @author 郑人滏 42020306\r\n * @since 2023/9/9\r\n * @link https://github.com/himmelbleu/bleuon-app\r\n */\r\n\r\nimport request from \"./use-axios\";\r\n\r\n/**\r\n * 邮箱、用户名或手机号登录\r\n *\r\n * @param entity 用户实体类\r\n */\r\nexport function accountLogin(entity: IUser, success: Function, error?: Function) {\r\n  const body = {\r\n    username: entity.username,\r\n    password: entity.password\r\n  };\r\n\r\n  const headers = {\r\n    \"Content-Type\": \"application/x-www-form-urlencoded\"\r\n  };\r\n\r\n  request\r\n    .post<R<TokenR>>(\"/auth/login\", body, { headers })\r\n    .then(({ data }) => {\r\n      localStorage.setStorageWithAge(\r\n        KeyVals.MAINAPP_TOKEN_KEY,\r\n        data.data.token,\r\n        data.data.expire,\r\n        data.data.username,\r\n        data.data.id\r\n      );\r\n      success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error(err);\r\n    });\r\n}\r\n\r\n/**\r\n * 邮箱、用户名或手机号注册\r\n *\r\n * @param entity 用户实体类\r\n */\r\nexport function accountRegister(entity: IUser, success?: Function, error?: Function) {\r\n  const body = {\r\n    username: entity.username,\r\n    password: entity.password\r\n  };\r\n\r\n  request\r\n    .post<R>(\"/auth/account-register\", body)\r\n    .then(({ data }) => {\r\n      success && success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error(err);\r\n    });\r\n}\r\n\r\n/**\r\n * 获取验证码\r\n *\r\n * @param email 电子邮箱地址\r\n * @param type login（登录）、reset（重置）、register（注册）\r\n */\r\nexport function askMailVerifyCode(\r\n  email: string,\r\n  type: \"login\" | \"register\" | \"reset\",\r\n  success?: Function,\r\n  error?: Function\r\n) {\r\n  const params = { type, email };\r\n\r\n  request\r\n    .get<R>(\"/auth/aks-mail-verify-code\", { params })\r\n    .then(({ data }) => {\r\n      success && success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error(err);\r\n    });\r\n}\r\n\r\n/**\r\n * 校验邮箱验证码\r\n *\r\n * @param entity 用户实体类\r\n * @param code 验证码\r\n * @param type login（登录）、reset（重置）、register（注册）\r\n */\r\nexport function verifyMailCode(\r\n  entity: IUser,\r\n  code: string,\r\n  type: \"login\" | \"register\" | \"reset\",\r\n  success: Function,\r\n  error?: Function\r\n) {\r\n  const body = {\r\n    email: entity.email,\r\n    password: entity.password\r\n  };\r\n\r\n  const params = { type, code };\r\n\r\n  request\r\n    .post<R<TokenR>>(\"/auth/verify-mail-code\", body, { params })\r\n    .then(({ data }) => {\r\n      if (type === \"login\") {\r\n        localStorage.setStorageWithAge(\r\n          KeyVals.MAINAPP_TOKEN_KEY,\r\n          data.data.token,\r\n          data.data.expire,\r\n          data.data.username,\r\n          data.data.id\r\n        );\r\n      }\r\n      success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error();\r\n    });\r\n}\r\n\r\n/**\r\n * 重置密码\r\n *\r\n * @param entity 用户实体类\r\n */\r\nexport function resetPassword(entity: IUser, success: Function, error?: Function) {\r\n  const body = {\r\n    email: entity.email,\r\n    password: entity.password\r\n  };\r\n\r\n  request\r\n    .post<R>(\"/auth/reset-password\", body)\r\n    .then(({ data }) => {\r\n      success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error();\r\n    });\r\n}\r\n\r\n/**\r\n * 请求退出登录\r\n *\r\n * @param success 退出登录成功回调函数\r\n * @param error 退出登录失败回调函数\r\n */\r\nexport function logout(success: Function, error?: Function) {\r\n  request\r\n    .post<R>(\"/auth/logout\")\r\n    .then(({ data }) => {\r\n      if (data.code === 200) {\r\n        localStorage.removeItem(KeyVals.MAINAPP_TOKEN_KEY);\r\n        success && success(data);\r\n      } else error && error();\r\n    })\r\n    .catch(err => {\r\n      error && error();\r\n    });\r\n}\r\n"],"names":["isNil","value","ElementPlusError","m","throwError","scope","debugWarn","message","UPDATE_MODEL_EVENT","CHANGE_EVENT","INPUT_EVENT","accountLogin","entity","success","error","body","headers","request","data","KeyVals.MAINAPP_TOKEN_KEY","err","accountRegister","askMailVerifyCode","email","type","params","verifyMailCode","code","resetPassword","logout"],"mappings":"mFAoBA,SAASA,EAAMC,EAAO,CACpB,OAAOA,GAAS,IAClB,CCnBA,MAAMC,UAAyB,KAAM,CACnC,YAAYC,EAAG,CACb,MAAMA,CAAC,EACP,KAAK,KAAO,kBACb,CACH,CACA,SAASC,EAAWC,EAAOF,EAAG,CAC5B,MAAM,IAAID,EAAiB,IAAIG,CAAK,KAAKF,CAAC,EAAE,CAC9C,CACA,SAASG,EAAUD,EAAOE,EAAS,CAKnC,CCjBK,MAACC,EAAqB,oBACrBC,EAAe,SACfC,EAAc,QCYJ,SAAAC,EAAaC,EAAeC,EAAmBC,EAAkB,CAC/E,MAAMC,EAAO,CACX,SAAUH,EAAO,SACjB,SAAUA,EAAO,QAAA,EAGbI,EAAU,CACd,eAAgB,mCAAA,EAIfC,EAAA,KAAgB,cAAeF,EAAM,CAAE,QAAAC,CAAS,CAAA,EAChD,KAAK,CAAC,CAAE,KAAAE,KAAW,CACL,aAAA,kBACXC,EACAD,EAAK,KAAK,MACVA,EAAK,KAAK,OACVA,EAAK,KAAK,SACVA,EAAK,KAAK,EAAA,EAEZL,EAAQK,CAAI,CAAA,CACb,EACA,MAAaE,GAAA,CACZN,GAASA,EAAMM,CAAG,CAAA,CACnB,CACL,CAOgB,SAAAC,EAAgBT,EAAeC,EAAoBC,EAAkB,CACnF,MAAMC,EAAO,CACX,SAAUH,EAAO,SACjB,SAAUA,EAAO,QAAA,EAIhBK,EAAA,KAAQ,yBAA0BF,CAAI,EACtC,KAAK,CAAC,CAAE,KAAAG,KAAW,CAClBL,GAAWA,EAAQK,CAAI,CAAA,CACxB,EACA,MAAaE,GAAA,CACZN,GAASA,EAAMM,CAAG,CAAA,CACnB,CACL,CAQO,SAASE,EACdC,EACAC,EACAX,EACAC,EACA,CACM,MAAAW,EAAS,CAAE,KAAAD,EAAM,MAAAD,GAGpBN,EAAA,IAAO,6BAA8B,CAAE,OAAAQ,CAAQ,CAAA,EAC/C,KAAK,CAAC,CAAE,KAAAP,KAAW,CAClBL,GAAWA,EAAQK,CAAI,CAAA,CACxB,EACA,MAAaE,GAAA,CACZN,GAASA,EAAMM,CAAG,CAAA,CACnB,CACL,CASO,SAASM,EACdd,EACAe,EACAH,EACAX,EACAC,EACA,CACA,MAAMC,EAAO,CACX,MAAOH,EAAO,MACd,SAAUA,EAAO,QAAA,EAGba,EAAS,CAAE,KAAAD,EAAM,KAAAG,GAGpBV,EAAA,KAAgB,yBAA0BF,EAAM,CAAE,OAAAU,CAAQ,CAAA,EAC1D,KAAK,CAAC,CAAE,KAAAP,KAAW,CACdM,IAAS,SACE,aAAA,kBACXL,EACAD,EAAK,KAAK,MACVA,EAAK,KAAK,OACVA,EAAK,KAAK,SACVA,EAAK,KAAK,EAAA,EAGdL,EAAQK,CAAI,CAAA,CACb,EACA,MAAaE,GAAA,CACZN,GAASA,EAAM,CAAA,CAChB,CACL,CAOgB,SAAAc,EAAchB,EAAeC,EAAmBC,EAAkB,CAChF,MAAMC,EAAO,CACX,MAAOH,EAAO,MACd,SAAUA,EAAO,QAAA,EAIhBK,EAAA,KAAQ,uBAAwBF,CAAI,EACpC,KAAK,CAAC,CAAE,KAAAG,KAAW,CAClBL,EAAQK,CAAI,CAAA,CACb,EACA,MAAaE,GAAA,CACZN,GAASA,EAAM,CAAA,CAChB,CACL,CAQgB,SAAAe,EAAOhB,EAAmBC,EAAkB,CAC1DG,EACG,KAAQ,cAAc,EACtB,KAAK,CAAC,CAAE,KAAAC,KAAW,CACdA,EAAK,OAAS,KACH,aAAA,WAAWC,CAAyB,EACjDN,GAAWA,EAAQK,CAAI,GAClBJ,GAASA,EAAM,CAAA,CACvB,EACA,MAAaM,GAAA,CACZN,GAASA,EAAM,CAAA,CAChB,CACL","x_google_ignoreList":[0,1,2]}
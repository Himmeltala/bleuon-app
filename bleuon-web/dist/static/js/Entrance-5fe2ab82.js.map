{"version":3,"file":"Entrance-5fe2ab82.js","sources":["../../../apps/mainapp/utils/form-validators.ts","../../../apps/mainapp/views/entrance/components/AccountLogin.vue","../../../apps/mainapp/views/entrance/components/EmailLogin.vue","../../../apps/mainapp/views/entrance/Login.vue","../../../apps/mainapp/views/entrance/components/AccountRegister.vue","../../../apps/mainapp/views/entrance/components/EmailRegister.vue","../../../apps/mainapp/views/entrance/Register.vue","../../../apps/mainapp/views/entrance/components/FindAccountVerifyCode.vue","../../../apps/mainapp/views/entrance/components/FindAccountResetPassword.vue","../../../apps/mainapp/views/entrance/FindAccount.vue","../../../apps/mainapp/views/entrance/Entrance.vue"],"sourcesContent":["import type { FormInstance } from \"element-plus\";\r\n\r\n/**\r\n * 邮箱验证器\r\n *\r\n * @param isCorrect 邮箱地址是否正确的标识变量\r\n */\r\nexport function emailValidator(isCorrect: Ref<boolean>) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    if (!regex.test(value)) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入正确的邮箱格式\"));\r\n    } else if (value === \"\") {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入邮箱地址\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 验证码验证器\r\n *\r\n * @param isCorrect 验证码是否正确的标志变量\r\n */\r\nexport function verifyCodeValidator(isCorrect: Ref<boolean>) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    if (value.length < 6) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入 6 位数的验证码\"));\r\n    } else if (value === \"\") {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入验证码\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 获取验证码\r\n *\r\n * @param interval 定时器 ID\r\n * @param count 倒计时变量，一般是 60s\r\n * @param disabled 控制发送验证码按钮是否显示的布尔变量\r\n */\r\nexport function getVerifyCode(\r\n  interval: number,\r\n  count: Ref<number>,\r\n  disabled: Ref<boolean>,\r\n  startInterval: Function\r\n) {\r\n  startInterval(() => {\r\n    interval = setInterval(() => {\r\n      count.value--;\r\n      if (count.value < 0) {\r\n        clearInterval(interval);\r\n        disabled.value = false;\r\n        count.value = 60;\r\n      }\r\n    }, 1000);\r\n  });\r\n\r\n  disabled.value = true;\r\n}\r\n\r\n/**\r\n * 提交表单\r\n *\r\n * @param formEl 表单 Ref 对象\r\n * @param success 成功回调\r\n * @param error 失败回调\r\n */\r\nexport async function commitForm(\r\n  formEl: FormInstance | undefined,\r\n  success?: Function,\r\n  error?: Function\r\n) {\r\n  if (!formEl) return;\r\n  await formEl.validate((valid, fields) => {\r\n    if (valid) {\r\n      success && success(valid, fields);\r\n    } else {\r\n      error && error(valid, fields);\r\n      return false;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * 用户名验证器\r\n *\r\n * @param isCorrect 用户名是否正确的标识变量\r\n */\r\nexport function usernameValidator(isCorrect: Ref<boolean>) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    const regex = /^(?![_-])[\\u4e00-\\u9fa5a-zA-Z][\\u4e00-\\u9fa5a-zA-Z0-9_-]{4,16}$/;\r\n\r\n    if (!regex.test(value)) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"字母、中文、-、_，不能以数字开头、-、_开头，长度在4~16\"));\r\n    } else if (value === \"\") {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入用户名\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 密码验证器\r\n *\r\n * @param isCorrect 密码是否正确的标识变量\r\n */\r\nexport function passwordValidator(isCorrect: Ref<boolean>) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    const regex = /^[a-zA-Z0-9.]{8,16}$/;\r\n\r\n    if (!regex.test(value)) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"英文、.、数字，长度在8~16\"));\r\n    } else if (value === \"\") {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入密码\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 二次密码验证器\r\n *\r\n * @param isCorrect 密码是否正确的标识变量\r\n */\r\nexport function rePasswdValidator(\r\n  isCorrect: Ref<boolean>,\r\n  formData: {\r\n    password: string;\r\n    rePasswd: string;\r\n  }\r\n) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    const regex = /^[a-zA-Z0-9.]{8,16}$/;\r\n\r\n    if (!regex.test(value)) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"英文、.、数字，长度在8~16\"));\r\n    } else if (value === \"\") {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入密码\"));\r\n    } else if (formData.rePasswd !== formData.password) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"两次密码输入不一致\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 手机号、电子邮箱、用户名格式校验器\r\n *\r\n * @param isCorrect 是否正确的标志变量\r\n */\r\nexport function accountValidator(isCorrect: Ref<boolean>) {\r\n  return (rule: any, value: any, callback: any) => {\r\n    const regex =\r\n      /^(?:[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}|(?![_-])[\\u4e00-\\u9fa5a-zA-Z][\\u4e00-\\u9fa5a-zA-Z0-9_-]{4,16}|(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8})$/;\r\n    if (!regex.test(value)) {\r\n      isCorrect.value = false;\r\n      callback(new Error(\"请输入手机号、电子邮箱、用户名的格式\"));\r\n    } else {\r\n      isCorrect.value = true;\r\n      callback();\r\n    }\r\n  };\r\n}\r\n","<script setup lang=\"ts\">\nimport { USER_API } from \"@mainapp/apis\";\nimport type { FormRules } from \"element-plus\";\nimport { accountValidator, passwordValidator, commitForm } from \"@mainapp/utils/form-validators\";\n\nconst router = useRouter();\n\nconst isAccountCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive<IUser>({\n  username: \"\",\n  password: \"\"\n});\nconst formRules = reactive<FormRules>({\n  username: [\n    { required: true, message: \"请输入账号信息\", trigger: \"blur\" },\n    { validator: accountValidator(isAccountCorrect), trigger: \"change\" },\n    { validator: accountValidator(isAccountCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmLogin() {\n  commitForm(formRef.value, async () => {\n    await USER_API.accountLogin(formData, () => {\n      router.push(\"/home\");\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :rules=\"formRules\" :model=\"formData\">\n      <el-form-item prop=\"username\">\n        <el-input\n          clearable\n          size=\"large\"\n          v-model=\"formData.username\"\n          placeholder=\"请输入手机号/邮箱/用户名\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.password\"\n          placeholder=\"请输入密码\"\n          show-password />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isAccountCorrect || !isPasswordCorrect\"\n          @click=\"confirmLogin\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">登录</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\nimport { USER_API } from \"@mainapp/apis\";\nimport {\n  emailValidator,\n  verifyCodeValidator,\n  getVerifyCode,\n  commitForm\n} from \"@mainapp/utils/form-validators\";\nimport type { FormRules } from \"element-plus\";\n\nconst router = useRouter();\n\nlet interval: number;\nconst coudButtonCount = ref(60);\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  code: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  code: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  getVerifyCode(interval, coudButtonCount, codeButtonDisabled, async (callback: any) => {\n    await USER_API.askMailVerifyCode(formData.email, \"login\", () => callback());\n  });\n}\n\nfunction confirmSubmitForm() {\n  commitForm(formRef.value, async () => {\n    await USER_API.verifyMailCode(formData, formData.code, \"login\", () => {\n      router.push(\"/home\");\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input clearable size=\"large\" v-model=\"formData.email\" placeholder=\"请输入邮箱\" />\n      </el-form-item>\n      <el-form-item prop=\"code\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              clearable\n              class=\"w-100%\"\n              size=\"large\"\n              v-model=\"formData.code\"\n              placeholder=\"请输入验证码\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          @click=\"confirmSubmitForm\"\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">登录</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\n/**\n * @description 登录页\n * @author 郑人滏 42020306\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport AccountLogin from \"./components/AccountLogin.vue\";\nimport EmailLogin from \"./components/EmailLogin.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\ntype TabIndexType = \"AccountLogin\" | \"EmailLogin\";\n\nconst tabIndex = ref<TabIndexType>(\"AccountLogin\");\nconst tabs = {\n  AccountLogin,\n  EmailLogin\n};\n\nfunction changeTabIndex(name: TabIndexType) {\n  tabIndex.value = name;\n}\n</script>\n\n<template>\n  <div class=\"login w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">欢迎使用 BleuOn</div>\n      <div class=\"mb-10 f-c-s\">\n        <div\n          @click=\"changeTabIndex('AccountLogin')\"\n          class=\"mr-10 cursor-pointer pb-4 text-1.1rem\"\n          :class=\"\n            tabIndex === 'AccountLogin' ? 'active font-bold b-b-solid b-b-primary b-b-2' : 'text-b'\n          \">\n          账号登录\n        </div>\n        <div\n          @click=\"changeTabIndex('EmailLogin')\"\n          class=\"cursor-pointer pb-4 text-1.1rem\"\n          :class=\"\n            tabIndex === 'EmailLogin' ? 'active font-bold b-b-solid b-b-primary b-b-2' : 'text-b'\n          \">\n          邮箱登录\n        </div>\n      </div>\n      <KeepAlive>\n        <component :is=\"tabs[tabIndex]\"></component>\n      </KeepAlive>\n      <div class=\"f-c-b\">\n        <div class=\"text-b cursor-pointer\" @click=\"$emit('update:dynamicCompName', 'FindAccount')\">\n          忘记密码？\n        </div>\n        <div\n          class=\"text-primary cursor-pointer\"\n          @click=\"$emit('update:dynamicCompName', 'Register')\">\n          新用户账号注册\n        </div>\n      </div>\n      <div class=\"other-login mt-15 f-c-c text-b\">\n        <div>其他方式登录</div>\n      </div>\n    </div>\n    <div class=\"absolute text-center bottom-5 w-40% text-0.8rem text-b\">\n      登录即表示您已同意<span class=\"hover\"><u>服务条款</u></span>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n.other-login {\n  position: relative;\n\n  &::before {\n    content: \"\";\n    width: 90px;\n    height: 1px;\n    background: #dde0e4;\n    position: absolute;\n    left: 2rem;\n  }\n\n  &::after {\n    content: \"\";\n    width: 90px;\n    height: 1px;\n    background: #dde0e4;\n    position: absolute;\n    right: 2rem;\n  }\n}\n</style>\n","<script setup lang=\"ts\">\nimport type { FormRules } from \"element-plus\";\nimport {\n  usernameValidator,\n  passwordValidator,\n  rePasswdValidator,\n  commitForm\n} from \"@mainapp/utils/form-validators\";\nimport { USER_API } from \"@mainapp/apis\";\n\nconst formData = reactive({\n  username: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\nconst isUnameCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\nconst formRef = ref();\nconst formRules = reactive<FormRules>({\n  username: [\n    { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n    { validator: usernameValidator(isUnameCorrect), trigger: \"change\" },\n    { validator: usernameValidator(isUnameCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"change\" },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmRegister() {\n  commitForm(formRef.value, async () => {\n    await USER_API.accountRegister(formData, () => {\n      ElMessage({\n        type: \"success\",\n        message: \"恭喜您，请返回登录页面进行登录！\",\n        grouping: true\n      });\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"username\">\n        <el-input\n          :maxlength=\"16\"\n          :minlength=\"4\"\n          clearable\n          size=\"large\"\n          v-model=\"formData.username\"\n          placeholder=\"请输入用户名\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.password\"\n          placeholder=\"设置密码：支持任何字符\"\n          show-password />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.rePasswd\"\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isUnameCorrect || !isPasswordCorrect || !isRePasswdCorrect\"\n          @click=\"confirmRegister\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">注册</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-b text-0.8rem text-end mb-4\">注：注册后请尽快绑定邮箱，以防账号丢失。</div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\nimport type { FormRules } from \"element-plus\";\nimport {\n  emailValidator,\n  verifyCodeValidator,\n  passwordValidator,\n  rePasswdValidator,\n  getVerifyCode,\n  commitForm\n} from \"@mainapp/utils/form-validators\";\nimport { USER_API } from \"@mainapp/apis\";\n\nconst coudButtonCount = ref(60);\nlet interval: number;\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  code: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  code: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"change\" },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  getVerifyCode(interval, coudButtonCount, codeButtonDisabled, async (callback: any) => {\n    await USER_API.askMailVerifyCode(formData.email, \"register\", () => callback());\n  });\n}\n\nfunction confirmSubmitForm() {\n  commitForm(formRef.value, async () => {\n    await USER_API.verifyMailCode(formData, formData.code, \"register\", () => {\n      ElMessage({\n        type: \"success\",\n        message: \"恭喜您，请返回登录页面进行邮箱登录！\",\n        grouping: true\n      });\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input clearable size=\"large\" v-model=\"formData.email\" placeholder=\"请输入邮箱\" />\n      </el-form-item>\n      <el-form-item prop=\"code\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              clearable\n              class=\"w-100%\"\n              size=\"large\"\n              v-model=\"formData.code\"\n              placeholder=\"请输入验证码\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.password\"\n          placeholder=\"设置密码：支持任何字符\"\n          show-password />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.rePasswd\"\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          @click=\"confirmSubmitForm\"\n          :disabled=\"!isEmailCorrect || !isCodeCorrect || !isPasswordCorrect || !isRePasswdCorrect\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">注册</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-b text-0.8rem text-end mb-4\">注：注册后可立即前往登录。</div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\n/**\n * @description 注册页\n * @author 郑人滏 42020306\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport AccountRegister from \"./components/AccountRegister.vue\";\nimport EmailRegister from \"./components/EmailRegister.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\nconst tabIndex = ref<\"AccountRegister\" | \"EmailRegister\">(\"EmailRegister\");\nconst tabs = {\n  AccountRegister,\n  EmailRegister\n};\n</script>\n\n<template>\n  <div class=\"register w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">欢迎注册 BleuOn</div>\n      <div class=\"mb-10 f-c-s\">\n        <div\n          @click=\"tabIndex = 'EmailRegister'\"\n          class=\"mr-10 cursor-pointer pb-4 text-1.1rem\"\n          :class=\"\n            tabIndex === 'EmailRegister' ? 'active font-bold b-b-solid b-b-primary b-b-2' : 'text-b'\n          \">\n          邮箱注册\n        </div>\n        <div\n          @click=\"tabIndex = 'AccountRegister'\"\n          class=\"cursor-pointer pb-4 text-1.1rem\"\n          :class=\"\n            tabIndex === 'AccountRegister'\n              ? 'active font-bold b-b-solid b-b-primary b-b-2'\n              : 'text-b'\n          \">\n          账号注册\n        </div>\n      </div>\n      <KeepAlive>\n        <component :is=\"tabs[tabIndex]\"></component>\n      </KeepAlive>\n      <div\n        class=\"text-primary cursor-pointer f-c-e\"\n        @click=\"$emit('update:dynamicCompName', 'Login')\">\n        已经有账号？\n      </div>\n    </div>\n    <div class=\"absolute text-center bottom-5 w-40% text-0.8rem text-b\">\n      登录即表示您已同意<span class=\"hover\"><u>服务条款</u></span>\n    </div>\n  </div>\n</template>\n","<script setup lang=\"ts\">\nimport { USER_API } from \"@mainapp/apis\";\nimport {\n  emailValidator,\n  verifyCodeValidator,\n  getVerifyCode,\n  commitForm\n} from \"@mainapp/utils/form-validators\";\nimport type { FormRules } from \"element-plus\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String\n  }\n});\nconst emits = defineEmits([\"update:dynamicCompName\", \"update:email\"]);\n\nlet interval: number;\nconst coudButtonCount = ref(60);\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  code: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  code: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  getVerifyCode(interval, coudButtonCount, codeButtonDisabled, async (callback: any) => {\n    await USER_API.askMailVerifyCode(formData.email, \"reset\", () => callback());\n  });\n}\n\nconst isVerifySuccess = ref(false);\n\nfunction confirmSubmitForm() {\n  commitForm(formRef.value, async () => {\n    await USER_API.verifyMailCode(formData, formData.code, \"reset\", () => {\n      isVerifySuccess.value = true;\n      emits(\"update:email\", formData.email);\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input clearable size=\"large\" v-model=\"formData.email\" placeholder=\"请输入邮箱\" />\n      </el-form-item>\n      <el-form-item prop=\"code\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              clearable\n              class=\"w-100%\"\n              size=\"large\"\n              v-model=\"formData.code\"\n              placeholder=\"请输入验证码\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          v-if=\"!isVerifySuccess\"\n          @click=\"confirmSubmitForm\"\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">点击校验</span>\n        </el-button>\n        <el-button\n          v-else\n          @click=\"$emit('update:dynamicCompName', 'FindAccountRsetPassword')\"\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"success\">\n          <span class=\"font-bold\">点击下一步</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\nimport type { FormRules } from \"element-plus\";\nimport { passwordValidator, rePasswdValidator, commitForm } from \"@mainapp/utils/form-validators\";\nimport { USER_API } from \"@mainapp/apis\";\n\nconst props = defineProps({\n  email: {\n    type: String\n  }\n});\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\n\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\n\nconst formRules = reactive<FormRules>({\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"change\" },\n    { validator: rePasswdValidator(isRePasswdCorrect, formData), trigger: \"blur\" }\n  ]\n});\n\nonMounted(() => {\n  formData.email = props.email;\n});\n\nfunction confirmSubmitForm() {\n  commitForm(formRef.value, async () => {\n    await USER_API.resetPassword(formData, () => {\n      ElMessage.success(\"密码重置成功，请返回登录！\");\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input disabled clearable size=\"large\" v-model=\"formData.email\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.password\"\n          placeholder=\"设置密码：支持任何字符\"\n          show-password />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          clearable\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          size=\"large\"\n          v-model=\"formData.rePasswd\"\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          @click=\"confirmSubmitForm\"\n          :disabled=\"!isPasswordCorrect || !isRePasswdCorrect\"\n          size=\"large\"\n          class=\"w-100%\"\n          type=\"primary\">\n          <span class=\"font-bold\">确定重置密码</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-b text-0.8rem text-end mb-4\">注：重置后可立即前往登录。</div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\n/**\n * @description 找回账号\n * @author 郑人滏 42020306\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport FindAccountVerifyCode from \"./components/FindAccountVerifyCode.vue\";\nimport FindAccountRsetPassword from \"./components/FindAccountResetPassword.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\nconst tabIndex = ref<\"FindAccountRsetPassword\" | \"FindAccountVerifyCode\">(\"FindAccountVerifyCode\");\n\nconst tabs = {\n  FindAccountRsetPassword,\n  FindAccountVerifyCode\n};\n\nconst email = ref(\"\");\n</script>\n\n<template>\n  <div class=\"find-account w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">找回您的密码</div>\n      <KeepAlive>\n        <component\n          v-model:dynamic-comp-name=\"tabIndex\"\n          v-model:email=\"email\"\n          :is=\"tabs[tabIndex]\"></component>\n      </KeepAlive>\n      <div\n        class=\"f-c-e text-primary cursor-pointer\"\n        @click=\"$emit('update:dynamicCompName', 'Login')\">\n        想起密码？返回登录\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n","<script setup lang=\"ts\">\n/**\n * @description 登录入口路由组件\n * @author 郑人滏 42020306\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport Login from \"./Login.vue\";\nimport Register from \"./Register.vue\";\nimport FindAccount from \"./FindAccount.vue\";\n\nconst tabs = {\n  Login,\n  Register,\n  FindAccount\n};\nconst dynamicCompName = ref<\"Login\" | \"Register\" | \"FindAccount\">(\"Login\");\n</script>\n\n<template>\n  <div class=\"entrance f-c-c h-100vh\">\n    <div class=\"w-30% h-100% bg-#f0f0f0\"></div>\n    <div class=\"w-70% h-100%\">\n      <component\n        v-model:dynamic-comp-name=\"dynamicCompName\"\n        :is=\"tabs[dynamicCompName]\"></component>\n    </div>\n  </div>\n</template>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["emailValidator","isCorrect","rule","value","callback","verifyCodeValidator","getVerifyCode","interval","count","disabled","startInterval","commitForm","formEl","success","error","valid","fields","usernameValidator","passwordValidator","rePasswdValidator","formData","accountValidator","router","useRouter","isAccountCorrect","ref","isPasswordCorrect","formRef","reactive","formRules","confirmLogin","USER_API.accountLogin","coudButtonCount","codeButtonDisabled","isEmailCorrect","isCodeCorrect","confirmGetVerifyCode","USER_API.askMailVerifyCode","confirmSubmitForm","USER_API.verifyMailCode","tabIndex","tabs","AccountLogin","EmailLogin","changeTabIndex","name","isUnameCorrect","isRePasswdCorrect","confirmRegister","USER_API.accountRegister","ElMessage","AccountRegister","EmailRegister","isVerifySuccess","emits","onMounted","props","USER_API.resetPassword","FindAccountRsetPassword","FindAccountVerifyCode","email","Login","Register","FindAccount","dynamicCompName"],"mappings":"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"}
{"version":3,"file":"Entrance-0dca3c27.js","sources":["../../../apps/mainapp/views/entrance/components/AccountLogin.vue","../../../apps/mainapp/views/entrance/components/EmailLogin.vue","../../../apps/mainapp/views/entrance/Login.vue","../../../apps/mainapp/views/entrance/components/AccountRegister.vue","../../../apps/mainapp/views/entrance/components/EmailRegister.vue","../../../apps/mainapp/views/entrance/Register.vue","../../../apps/mainapp/views/entrance/components/FindAccountVerifyCode.vue","../../../apps/mainapp/views/entrance/components/FindAccountResetPassword.vue","../../../apps/mainapp/views/entrance/FindAccount.vue","../../../apps/mainapp/views/entrance/Entrance.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { UserApi } from \"@mainapp/apis\";\nimport { FormValidatorsUtil } from \"@common/utils\";\n\nconst router = useRouter();\n\nconst isAccountCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive<UserData>({\n  username: \"\",\n  password: \"\"\n});\nconst formRules = reactive<FormRules>({\n  username: [\n    { required: true, message: \"请输入账号信息\", trigger: \"blur\" },\n    { validator: FormValidatorsUtil.accountValidator(isAccountCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.accountValidator(isAccountCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmLogin() {\n  FormValidatorsUtil.validate(formRef.value, async () => {\n    UserApi.accountLogin(formData, token => {\n      localStorage.setToken(KeyVals.MAINAPP_TOKEN_KEY, token);\n      UserApi.fineByToken().then(data => {\n        useStorage<UserData>(KeyVals.MAINAPP_USER, {}).value = data;\n        router.push(\"/workbench\");\n      });\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"username\">\n        <el-input\n          v-model=\"formData.username\"\n          clearable\n          placeholder=\"请输入手机号/邮箱/用户名\"\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          v-model=\"formData.password\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"请输入密码\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isAccountCorrect || !isPasswordCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmLogin\">\n          <span class=\"font-bold\">登录</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\nimport { UserApi } from \"@mainapp/apis\";\nimport { FormValidatorsUtil } from \"@common/utils\";\n\nconst router = useRouter();\n\nlet interval: number;\nconst coudButtonCount = ref(60);\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  captcha: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  captcha: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  FormValidatorsUtil.getVerifyCode(\n    interval,\n    coudButtonCount,\n    codeButtonDisabled,\n    (callback: any) => {\n      UserApi.askLoginMailCaptcha({ email: formData.email }, () => callback());\n    }\n  );\n}\n\nfunction confirmSubmitForm() {\n  FormValidatorsUtil.validate(formRef.value, () => {\n    UserApi.loginWithMailCaptcha(formData, token => {\n      localStorage.setToken(KeyVals.MAINAPP_TOKEN_KEY, token);\n      UserApi.fineByToken().then(data => {\n        useStorage<UserData>(KeyVals.MAINAPP_USER, {}).value = data;\n        router.push(\"/workbench\");\n      });\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input v-model=\"formData.email\" clearable placeholder=\"请输入邮箱\" size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"captcha\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              v-model=\"formData.captcha\"\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              class=\"w-100%\"\n              clearable\n              placeholder=\"请输入验证码\"\n              size=\"large\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmSubmitForm\">\n          <span class=\"font-bold\">登录</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\n/**\n * @description 登录页\n * @author zheng\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport AccountLogin from \"./components/AccountLogin.vue\";\nimport EmailLogin from \"./components/EmailLogin.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\ntype TabIndexType = \"AccountLogin\" | \"EmailLogin\";\n\nconst tabIndex = ref<TabIndexType>(\"AccountLogin\");\nconst tabs = {\n  AccountLogin,\n  EmailLogin\n};\n\nfunction changeTabIndex(name: TabIndexType) {\n  tabIndex.value = name;\n}\n</script>\n\n<template>\n  <div class=\"login w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">欢迎使用 BleuOn</div>\n      <div class=\"mb-10 f-c-s\">\n        <div\n          :class=\"\n            tabIndex === 'AccountLogin'\n              ? 'active font-bold b-b-solid b-b-primary b-b-2'\n              : 'text-text-secondary'\n          \"\n          class=\"mr-10 cursor-pointer pb-4 text-1.1rem\"\n          @click=\"changeTabIndex('AccountLogin')\">\n          账号登录\n        </div>\n        <div\n          :class=\"\n            tabIndex === 'EmailLogin'\n              ? 'active font-bold b-b-solid b-b-primary b-b-2'\n              : 'text-text-secondary'\n          \"\n          class=\"cursor-pointer pb-4 text-1.1rem\"\n          @click=\"changeTabIndex('EmailLogin')\">\n          邮箱登录\n        </div>\n      </div>\n      <KeepAlive>\n        <component :is=\"tabs[tabIndex]\"></component>\n      </KeepAlive>\n      <div class=\"f-c-b\">\n        <div\n          class=\"text-text-secondary cursor-pointer\"\n          @click=\"$emit('update:dynamicCompName', 'FindAccount')\">\n          忘记密码？\n        </div>\n        <div\n          class=\"text-primary cursor-pointer\"\n          @click=\"$emit('update:dynamicCompName', 'Register')\">\n          新用户账号注册\n        </div>\n      </div>\n      <div class=\"other-login mt-15 f-c-c text-text-secondary\">\n        <div>其他方式登录</div>\n      </div>\n    </div>\n    <div class=\"absolute text-center bottom-5 w-40% text-0.8rem text-text-secondary\">\n      登录即表示您已同意<span class=\"hover\"><u>服务条款</u></span>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.other-login {\n  position: relative;\n\n  &::before {\n    content: \"\";\n    width: 90px;\n    height: 1px;\n    background: #dde0e4;\n    position: absolute;\n    left: 2rem;\n  }\n\n  &::after {\n    content: \"\";\n    width: 90px;\n    height: 1px;\n    background: #dde0e4;\n    position: absolute;\n    right: 2rem;\n  }\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { FormValidatorsUtil } from \"@common/utils\";\nimport { UserApi } from \"@mainapp/apis\";\n\nconst formData = reactive({\n  username: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\nconst isUnameCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\nconst formRef = ref();\nconst formRules = reactive<FormRules>({\n  username: [\n    { required: true, message: \"请输入用户名\", trigger: \"blur\" },\n    { validator: FormValidatorsUtil.usernameValidator(isUnameCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.usernameValidator(isUnameCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"change\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"blur\"\n    }\n  ]\n});\n\nfunction confirmRegister() {\n  FormValidatorsUtil.validate(formRef.value, async () => {\n    UserApi.accountRegister(formData, () => {\n      ElMessage.success(\"请返回登录页面进行登录！\");\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"username\">\n        <el-input\n          v-model=\"formData.username\"\n          :maxlength=\"16\"\n          :minlength=\"4\"\n          clearable\n          placeholder=\"请输入用户名\"\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          v-model=\"formData.password\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"设置密码：支持任何字符\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          v-model=\"formData.rePasswd\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isUnameCorrect || !isPasswordCorrect || !isRePasswdCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmRegister\">\n          <span class=\"font-bold\">注册</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-text-secondary text-0.8rem text-end mb-4\">\n      注：注册后请尽快绑定邮箱，以防账号丢失。\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\nimport { FormValidatorsUtil } from \"@common/utils\";\nimport { UserApi } from \"@mainapp/apis\";\n\nconst coudButtonCount = ref(60);\nlet interval: number;\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  captcha: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  captcha: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ],\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"change\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"blur\"\n    }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  FormValidatorsUtil.getVerifyCode(interval, coudButtonCount, codeButtonDisabled, callback => {\n    UserApi.askRegisterMailCaptcha({ email: formData.email }, () => callback());\n  });\n}\n\nfunction confirmSubmitForm() {\n  FormValidatorsUtil.validate(formRef.value, () => {\n    UserApi.registerWithMailCaptcha(\n      formData,\n      { email: formData.email, captcha: formData.captcha },\n      () => {\n        ElMessage.success(\"请返回登录页面进行邮箱登录！\");\n      }\n    );\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input v-model=\"formData.email\" clearable placeholder=\"请输入邮箱\" size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"captcha\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              v-model=\"formData.captcha\"\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              class=\"w-100%\"\n              clearable\n              placeholder=\"请输入6位验证码\"\n              size=\"large\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          v-model=\"formData.password\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"设置密码：支持任何字符\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          v-model=\"formData.rePasswd\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isEmailCorrect || !isCodeCorrect || !isPasswordCorrect || !isRePasswdCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmSubmitForm\">\n          <span class=\"font-bold\">注册</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-text-secondary text-0.8rem text-end mb-4\">注：注册后可立即前往登录。</div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\n/**\n * @description 注册页\n * @author zheng\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport AccountRegister from \"./components/AccountRegister.vue\";\nimport EmailRegister from \"./components/EmailRegister.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\nconst tabIndex = ref<\"AccountRegister\" | \"EmailRegister\">(\"EmailRegister\");\nconst tabs = {\n  AccountRegister,\n  EmailRegister\n};\n</script>\n\n<template>\n  <div class=\"register w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">欢迎注册 BleuOn</div>\n      <div class=\"mb-10 f-c-s\">\n        <div\n          :class=\"\n            tabIndex === 'EmailRegister'\n              ? 'active font-bold b-b-solid b-b-primary b-b-2'\n              : 'text-text-secondary'\n          \"\n          class=\"mr-10 cursor-pointer pb-4 text-1.1rem\"\n          @click=\"tabIndex = 'EmailRegister'\">\n          邮箱注册\n        </div>\n        <div\n          :class=\"\n            tabIndex === 'AccountRegister'\n              ? 'active font-bold b-b-solid b-b-primary b-b-2'\n              : 'text-text-secondary'\n          \"\n          class=\"cursor-pointer pb-4 text-1.1rem\"\n          @click=\"tabIndex = 'AccountRegister'\">\n          账号注册\n        </div>\n      </div>\n      <KeepAlive>\n        <component :is=\"tabs[tabIndex]\"></component>\n      </KeepAlive>\n      <div\n        class=\"text-primary cursor-pointer f-c-e\"\n        @click=\"$emit('update:dynamicCompName', 'Login')\">\n        已经有账号？\n      </div>\n    </div>\n    <div class=\"absolute text-center bottom-5 w-40% text-0.8rem text-text-secondary\">\n      登录即表示您已同意<span class=\"hover\"><u>服务条款</u></span>\n    </div>\n  </div>\n</template>\n","<script lang=\"ts\" setup>\nimport { UserApi } from \"@mainapp/apis\";\nimport { FormValidatorsUtil } from \"@common/utils\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  },\n  email: {\n    type: String\n  }\n});\nconst emits = defineEmits([\"update:dynamicCompName\", \"update:email\"]);\n\nlet interval: number;\nconst coudButtonCount = ref(60);\nconst codeButtonDisabled = ref(false);\nconst isEmailCorrect = ref(false);\nconst isCodeCorrect = ref(false);\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  captcha: \"\"\n});\n\nconst formRules = reactive<FormRules>({\n  email: [\n    { required: true, message: \"请输入电子邮箱\", trigger: \"blur\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.emailValidator(isEmailCorrect), trigger: \"blur\" }\n  ],\n  captcha: [\n    {\n      required: true,\n      message: \"请输入验证码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.verifyCodeValidator(isCodeCorrect), trigger: \"blur\" }\n  ]\n});\n\nfunction confirmGetVerifyCode() {\n  FormValidatorsUtil.getVerifyCode(\n    interval,\n    coudButtonCount,\n    codeButtonDisabled,\n    (callback: any) => {\n      UserApi.askResetMailCaptcha({ email: formData.email }, () => callback());\n    }\n  );\n}\n\nconst isVerifySuccess = ref(false);\n\nfunction confirmSubmitForm() {\n  FormValidatorsUtil.validate(formRef.value, () => {\n    UserApi.verifyMailCaptcha(formData, () => {\n      isVerifySuccess.value = true;\n      emits(\"update:email\", formData.email);\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input v-model=\"formData.email\" clearable placeholder=\"请输入邮箱\" size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"captcha\">\n        <div class=\"f-c-b w-100%\">\n          <div class=\"w-70%\">\n            <el-input\n              v-model=\"formData.captcha\"\n              :maxlength=\"6\"\n              :minlength=\"6\"\n              class=\"w-100%\"\n              clearable\n              placeholder=\"请输入验证码\"\n              size=\"large\" />\n          </div>\n          <div class=\"w-30% f-c-e\">\n            <el-button\n              :disabled=\"codeButtonDisabled || !isEmailCorrect\"\n              size=\"large\"\n              @click=\"confirmGetVerifyCode\">\n              <span v-if=\"coudButtonCount < 60 && coudButtonCount >= 0\">\n                请等待 {{ coudButtonCount }}s\n              </span>\n              <span v-else>获取验证码</span>\n            </el-button>\n          </div>\n        </div>\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          v-if=\"!isVerifySuccess\"\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmSubmitForm\">\n          <span class=\"font-bold\">点击校验</span>\n        </el-button>\n        <el-button\n          v-else\n          :disabled=\"!isEmailCorrect || !isCodeCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"success\"\n          @click=\"$emit('update:dynamicCompName', 'FindAccountRsetPassword')\">\n          <span class=\"font-bold\">点击下一步</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\nimport { FormValidatorsUtil } from \"@common/utils\";\nimport { UserApi } from \"@mainapp/apis\";\n\nconst props = defineProps({\n  email: {\n    type: String\n  }\n});\n\nconst formRef = ref();\nconst formData = reactive({\n  email: \"\",\n  password: \"\",\n  rePasswd: \"\"\n});\n\nconst isPasswordCorrect = ref(false);\nconst isRePasswdCorrect = ref(false);\n\nconst formRules = reactive<FormRules>({\n  password: [\n    {\n      required: true,\n      message: \"请输入密码\",\n      trigger: \"blur\"\n    },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"change\" },\n    { validator: FormValidatorsUtil.passwordValidator(isPasswordCorrect), trigger: \"blur\" }\n  ],\n  rePasswd: [\n    {\n      required: true,\n      message: \"请确认密码\",\n      trigger: \"blur\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"change\"\n    },\n    {\n      validator: FormValidatorsUtil.rePasswdValidator(isRePasswdCorrect, formData),\n      trigger: \"blur\"\n    }\n  ]\n});\n\nonMounted(() => {\n  formData.email = props.email;\n});\n\nfunction confirmSubmitForm() {\n  FormValidatorsUtil.validate(formRef.value, () => {\n    UserApi.resetPassword(formData, () => {\n      ElMessage.success(\"密码重置成功，请返回登录！\");\n    });\n  });\n}\n</script>\n\n<template>\n  <div>\n    <el-form ref=\"formRef\" :model=\"formData\" :rules=\"formRules\">\n      <el-form-item prop=\"email\">\n        <el-input v-model=\"formData.email\" clearable disabled size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"password\">\n        <el-input\n          v-model=\"formData.password\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"设置密码：支持任何字符\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item prop=\"rePasswd\">\n        <el-input\n          v-model=\"formData.rePasswd\"\n          :maxlength=\"16\"\n          :minlength=\"8\"\n          clearable\n          placeholder=\"确认密码：两次密码保持一致\"\n          show-password\n          size=\"large\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button\n          :disabled=\"!isPasswordCorrect || !isRePasswdCorrect\"\n          class=\"w-100%\"\n          size=\"large\"\n          type=\"primary\"\n          @click=\"confirmSubmitForm\">\n          <span class=\"font-bold\">确定重置密码</span>\n        </el-button>\n      </el-form-item>\n    </el-form>\n    <div class=\"text-text-secondary text-0.8rem text-end mb-4\">注：重置后可立即前往登录。</div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\n/**\n * @description 找回账号\n * @author zheng\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport FindAccountVerifyCode from \"./components/FindAccountVerifyCode.vue\";\nimport FindAccountRsetPassword from \"./components/FindAccountResetPassword.vue\";\n\ndefineProps({\n  dynamicCompName: {\n    type: String,\n    required: true\n  }\n});\ndefineEmits([\"update:dynamicCompName\"]);\n\nconst tabIndex = ref<\"FindAccountRsetPassword\" | \"FindAccountVerifyCode\">(\"FindAccountVerifyCode\");\n\nconst tabs = {\n  FindAccountRsetPassword,\n  FindAccountVerifyCode\n};\n\nconst email = ref(\"\");\n</script>\n\n<template>\n  <div class=\"find-account w-100% h-100% relative f-c-c\">\n    <div class=\"w-40%\">\n      <div class=\"mb-10 text-1.6rem\">找回您的密码</div>\n      <KeepAlive>\n        <component\n          :is=\"tabs[tabIndex]\"\n          v-model:dynamic-comp-name=\"tabIndex\"\n          v-model:email=\"email\"></component>\n      </KeepAlive>\n      <div\n        class=\"f-c-e text-primary cursor-pointer\"\n        @click=\"$emit('update:dynamicCompName', 'Login')\">\n        想起密码？返回登录\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n","<script lang=\"ts\" setup>\n/**\n * @description 登录入口路由组件\n * @author zheng\n * @since 2023/8/23\n * @link https://github.com/himmelbleu/bleuon-app\n */\n\nimport Login from \"./Login.vue\";\nimport Register from \"./Register.vue\";\nimport FindAccount from \"./FindAccount.vue\";\n\nconst tabs = {\n  Login,\n  Register,\n  FindAccount\n};\nconst dynamicCompName = ref<\"Login\" | \"Register\" | \"FindAccount\">(\"Login\");\n</script>\n\n<template>\n  <div class=\"entrance f-c-c h-100vh\">\n    <div class=\"w-40% h-100% relative\">\n      <img class=\"w-45 h-15 object-cover absolute top-10 left-10\" src=\"/bleuon-icon.png\" />\n      <div class=\"absolute top-50% left-30 color-gray-100 text-2rem\">\n        在同一个地方，构思、设计<br />\n        ，让你更加高效<br />\n        <span class=\"text-1rem\">√永久免费 √实时在线 √设计/原型/开发</span>\n      </div>\n      <div class=\"absolute bottom-10 left-10 color-gray-200 text-0.9rem\">\n        © 2023 郑人滏. All rights reserved.\n      </div>\n      <img\n        class=\"w-100% h-100% object-fill\"\n        src=\"https://img.js.design/assets/Resources/background/login-bg-5.jpg\" />\n    </div>\n    <div class=\"w-60% h-100%\">\n      <component\n        :is=\"tabs[dynamicCompName]\"\n        v-model:dynamic-comp-name=\"dynamicCompName\"></component>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped></style>\n"],"names":["router","useRouter","isAccountCorrect","ref","isPasswordCorrect","formRef","formData","reactive","formRules","FormValidatorsUtil.accountValidator","FormValidatorsUtil.passwordValidator","confirmLogin","FormValidatorsUtil.validate","UserApi.accountLogin","token","KeyVals.MAINAPP_TOKEN_KEY","UserApi.fineByToken","data","useStorage","KeyVals.MAINAPP_USER","interval","coudButtonCount","codeButtonDisabled","isEmailCorrect","isCodeCorrect","FormValidatorsUtil.emailValidator","FormValidatorsUtil.verifyCodeValidator","confirmGetVerifyCode","FormValidatorsUtil.getVerifyCode","callback","UserApi.askLoginMailCaptcha","confirmSubmitForm","UserApi.loginWithMailCaptcha","tabIndex","tabs","AccountLogin","EmailLogin","changeTabIndex","name","isUnameCorrect","isRePasswdCorrect","FormValidatorsUtil.usernameValidator","FormValidatorsUtil.rePasswdValidator","confirmRegister","UserApi.accountRegister","ElMessage","UserApi.askRegisterMailCaptcha","UserApi.registerWithMailCaptcha","AccountRegister","EmailRegister","UserApi.askResetMailCaptcha","isVerifySuccess","UserApi.verifyMailCaptcha","emits","onMounted","props","UserApi.resetPassword","FindAccountRsetPassword","FindAccountVerifyCode","email","Login","Register","FindAccount","dynamicCompName"],"mappings":"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"}
{"version":3,"file":"api-flowchart-488ff946.js","sources":["../../../apps/mainapp/apis/api-flowchart.ts"],"sourcesContent":["/**\r\n * @description FlowChart API\r\n * @author zheng\r\n * @since 2023/9/28\r\n * @link https://github.com/himmelbleu/bleuon-app\r\n */\r\nimport request from \"./use-axios\";\r\n\r\n/**\r\n * 更新流程图\r\n *\r\n * @param body\r\n * @param success\r\n */\r\nexport function renewal(body: FlowchartData, success?: (data: R) => void) {\r\n  request.put<R>(\"/flowchart/renewal\", body).then(({ data }) => {\r\n    success && success(data);\r\n  });\r\n}\r\n\r\n/**\r\n * 通过 id 获取流程图\r\n *\r\n * @param params\r\n * @returns\r\n */\r\nexport async function findById(params: { id: string }) {\r\n  const { data } = await request.get<R<FlowchartData>>(\"/flowchart/find/by/id\", { params });\r\n  return data.data;\r\n}\r\n\r\n/**\r\n * 获取流程图\r\n *\r\n * @param params\r\n * @param error\r\n * @returns\r\n */\r\nexport async function exposeFindOne(params: { id: string }, error?: Function) {\r\n  try {\r\n    const { data } = await request.get<R<FlowchartData>>(\"/expose/flowchart/find/one\", { params });\r\n    return data.data;\r\n  } catch (err) {\r\n    error && error(err);\r\n  }\r\n}\r\n\r\n/**\r\n * 通过条件查询获取流程图列表\r\n *\r\n * @param criteria\r\n * @returns\r\n */\r\nexport async function findAllByCriteria(criteria: {\r\n  sequences?: { isAsc: boolean; col: string }[];\r\n  fileName?: string;\r\n  isPublic?: number;\r\n  isShare?: number;\r\n  isLegal?: number;\r\n}) {\r\n  const { data } = await request.post<R<FlowchartData[]>>(\r\n    \"/flowchart/find/all/by/criteria\",\r\n    criteria\r\n  );\r\n  return data.data;\r\n}\r\n\r\n/**\r\n * 创建流程图\r\n *\r\n * @param success\r\n */\r\nexport function add(success: (res: R<FlowchartData>) => void) {\r\n  request.post<R<FlowchartData>>(\"/flowchart/add\").then(({ data }) => {\r\n    success && success(data);\r\n  });\r\n}\r\n\r\n/**\r\n * 复制一个流程图\r\n *\r\n * @param body\r\n * @param success\r\n * @param error\r\n */\r\nexport function replicate(body: FlowchartData, success?: (res: R) => void, error?: Function) {\r\n  request\r\n    .post<R<FlowchartData>>(\"/flowchart/replicate\", body)\r\n    .then(({ data }) => {\r\n      success && success(data);\r\n    })\r\n    .catch(err => {\r\n      error && error(err);\r\n    });\r\n}\r\n\r\n/**\r\n * 删除一个流程图\r\n *\r\n * @param params\r\n * @param success\r\n * @param error\r\n */\r\nexport function eraseById(params: { id?: string }, success: Function, error?: Function) {\r\n  request\r\n    .delete<R<void>>(\"/flowchart/erase/by/id\", {\r\n      params\r\n    })\r\n    .then(() => {\r\n      success && success();\r\n    })\r\n    .catch(err => {\r\n      error && error(err);\r\n    });\r\n}\r\n\r\n/**\r\n * 查询所有的收藏的流程图\r\n *\r\n * @param params\r\n * @returns\r\n */\r\nexport async function findAllCollectByCriteria(params: { fileName?: string }) {\r\n  const { data } = await request.get<R<any[]>>(\"/flowchart/find/all/collect/by/criteria\", {\r\n    params\r\n  });\r\n  return data.data;\r\n}\r\n\r\n/**\r\n * 收藏一个流程图\r\n *\r\n * @param body\r\n * @param success\r\n */\r\nexport async function addCollect(body: { flowchartId: string }, success?: Function) {\r\n  request.post(\"/flowchart/add/collect\", body).then(() => {\r\n    success && success();\r\n  });\r\n}\r\n\r\n/**\r\n * 删除一个收藏的流程图\r\n *\r\n * @param params\r\n * @param success\r\n */\r\nexport async function eraseCollect(params: { flowchartId: string }, success?: Function) {\r\n  await request.delete<R<void>>(\"/flowchart/erase/collect\", { params }).then(() => {\r\n    success && success();\r\n  });\r\n}\r\n\r\n/**\r\n * 发布和公开流程图到模板社区\r\n *\r\n * @param body\r\n * @param success\r\n */\r\nexport function release(body: TemplateFlowchartData, success?: Function) {\r\n  request.post<R<void>>(\"/flowchart/release\", body).then(() => {\r\n    success && success();\r\n  });\r\n}\r\n\r\n/**\r\n * 取消发布和公开一个流程图\r\n *\r\n * @param params\r\n * @param success\r\n */\r\nexport function cancelRelease(params: { flowchartId: string }, success?: Function) {\r\n  request\r\n    .delete<R<void>>(\"/flowchart/cancel/release\", { params })\r\n    .then(() => {\r\n      success && success();\r\n    })\r\n    .catch(err => {});\r\n}\r\n"],"names":["renewal","body","success","request","data","findById","params","exposeFindOne","error","err","findAllByCriteria","criteria","add","replicate","eraseById","findAllCollectByCriteria","addCollect","eraseCollect","release","cancelRelease"],"mappings":"2CAcgB,SAAAA,EAAQC,EAAqBC,EAA6B,CAChEC,EAAA,IAAO,qBAAsBF,CAAI,EAAE,KAAK,CAAC,CAAE,KAAAG,KAAW,CAC5DF,GAAWA,EAAQE,CAAI,CAAA,CACxB,CACH,CAQA,eAAsBC,EAASC,EAAwB,CAC/C,KAAA,CAAE,KAAAF,CAAS,EAAA,MAAMD,EAAQ,IAAsB,wBAAyB,CAAE,OAAAG,CAAA,CAAQ,EACxF,OAAOF,EAAK,IACd,CASsB,eAAAG,EAAcD,EAAwBE,EAAkB,CACxE,GAAA,CACI,KAAA,CAAE,KAAAJ,CAAS,EAAA,MAAMD,EAAQ,IAAsB,6BAA8B,CAAE,OAAAG,CAAA,CAAQ,EAC7F,OAAOF,EAAK,WACLK,EAAK,CACZD,GAASA,EAAMC,CAAG,CACpB,CACF,CAQA,eAAsBC,EAAkBC,EAMrC,CACD,KAAM,CAAE,KAAAP,CAAA,EAAS,MAAMD,EAAQ,KAC7B,kCACAQ,CAAA,EAEF,OAAOP,EAAK,IACd,CAOO,SAASQ,EAAIV,EAA0C,CAC5DC,EAAQ,KAAuB,gBAAgB,EAAE,KAAK,CAAC,CAAE,KAAAC,KAAW,CAClEF,GAAWA,EAAQE,CAAI,CAAA,CACxB,CACH,CASgB,SAAAS,EAAUZ,EAAqBC,EAA4BM,EAAkB,CAExFL,EAAA,KAAuB,uBAAwBF,CAAI,EACnD,KAAK,CAAC,CAAE,KAAAG,KAAW,CAClBF,GAAWA,EAAQE,CAAI,CAAA,CACxB,EACA,MAAaK,GAAA,CACZD,GAASA,EAAMC,CAAG,CAAA,CACnB,CACL,CASgB,SAAAK,EAAUR,EAAyBJ,EAAmBM,EAAkB,CACtFL,EACG,OAAgB,yBAA0B,CACzC,OAAAG,CAAA,CACD,EACA,KAAK,IAAM,CACVJ,GAAWA,EAAQ,CAAA,CACpB,EACA,MAAaO,GAAA,CACZD,GAASA,EAAMC,CAAG,CAAA,CACnB,CACL,CAQA,eAAsBM,EAAyBT,EAA+B,CAC5E,KAAM,CAAE,KAAAF,CAAK,EAAI,MAAMD,EAAQ,IAAc,0CAA2C,CACtF,OAAAG,CAAA,CACD,EACD,OAAOF,EAAK,IACd,CAQsB,eAAAY,EAAWf,EAA+BC,EAAoB,CAClFC,EAAQ,KAAK,yBAA0BF,CAAI,EAAE,KAAK,IAAM,CACtDC,GAAWA,EAAQ,CAAA,CACpB,CACH,CAQsB,eAAAe,EAAaX,EAAiCJ,EAAoB,CAChF,MAAAC,EAAQ,OAAgB,2BAA4B,CAAE,OAAAG,CAAQ,CAAA,EAAE,KAAK,IAAM,CAC/EJ,GAAWA,EAAQ,CAAA,CACpB,CACH,CAQgB,SAAAgB,EAAQjB,EAA6BC,EAAoB,CACvEC,EAAQ,KAAc,qBAAsBF,CAAI,EAAE,KAAK,IAAM,CAC3DC,GAAWA,EAAQ,CAAA,CACpB,CACH,CAQgB,SAAAiB,EAAcb,EAAiCJ,EAAoB,CACjFC,EACG,OAAgB,4BAA6B,CAAE,OAAAG,CAAQ,CAAA,EACvD,KAAK,IAAM,CACVJ,GAAWA,EAAQ,CAAA,CACpB,EACA,MAAaO,GAAA,CAAA,CAAE,CACpB"}